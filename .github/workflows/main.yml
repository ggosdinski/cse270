# Simple workflow for deploying static content to GitHub Pages
name: Simple CI/CD Pipeline for CSE 270

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4.1.2

      - name: Set up Python 3.12
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests pytest-mock selenium requests-mock coverage django
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Apply database migrations
        run: |
          python manage.py migrate
        working-directory: ./directorydata_service # Cambia esto a la carpeta donde está tu proyecto Django

      # Instalar Google Chrome y ChromeDriver correctamente
      - name: Install Google Chrome and ChromeDriver
        run: |
          sudo apt update
          sudo apt install -y wget curl unzip

          # Descargar e instalar Google Chrome
          wget -q -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome.deb
          rm google-chrome.deb

          # Verificar instalación
          google-chrome --version

          # Descargar e instalar ChromeDriver (versión compatible con Chrome)
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d '.' -f1)
          DRIVER_URL=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget -q -O chromedriver.zip "https://chromedriver.storage.googleapis.com/$DRIVER_URL/chromedriver_linux64.zip"
          unzip chromedriver.zip
          sudo mv chromedriver /usr/local/bin/
          rm chromedriver.zip

          # Verificar instalación de ChromeDriver
          chromedriver --version

      - name: Set Chrome Binary Path
        run: |
          echo "CHROME_BIN=$(which google-chrome)" >> $GITHUB_ENV
          echo "CHROMEDRIVER_BIN=$(which chromedriver)" >> $GITHUB_ENV

      - name: Start Django server
        run: |
          nohup python manage.py runserver 127.0.0.1:8000 & 
          sleep 10  # Esperar a que el servidor se inicie correctamente
        working-directory: ./directorydata_service # Cambia esto a la carpeta donde está tu proyecto Django

      - name: Run tests
        run: |
          pytest
        env:
          BASE_URL:
            "http://127.0.0.1:8000/teton/1.6/index.html"
            #"http://127.0.0.1:5500"

  analyze:
    needs: build
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  deploy:
    needs: analyze
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Setup Pages
        uses: actions/configure-pages@v4.0.0

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: "teton/1.6"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
